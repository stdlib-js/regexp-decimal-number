{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/main.js","../lib/index.js","../lib/regexp_capture.js","../lib/regexp.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {string} [options.flags] - regular expression flags\n* @param {boolean} [options.capture] - boolean indicating whether to wrap a regular expression matching a decimal number with a capture group\n* @returns {(Error|null)} null or an error object\n*\n* @example\n* var opts = {};\n* var options = {\n*     'flags': 'gm'\n* };\n* var err = validate( opts, options );\n* if ( err ) {\n*     throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t}\n\tif ( hasOwnProp( options, 'flags' ) ) {\n\t\topts.flags = options.flags;\n\t\tif ( !isString( opts.flags ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'flags', opts.flags ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'capture' ) ) {\n\t\topts.capture = options.capture;\n\t\tif ( !isBoolean( opts.capture ) ) {\n\t\t\treturn new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'capture', opts.capture ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar validate = require( './validate.js' );\n\n\n// VARIABLES //\n\nvar REGEXP_STRING = '[-+]{0,1}[0-9]*\\\\.[0-9]+';\n\n\n// MAIN //\n\n/**\n* Returns a regular expression to match a decimal number.\n*\n* @param {Options} [options] - function options\n* @param {string} [options.flags=''] - regular expression flags\n* @param {boolean} [options.capture=false] - boolean indicating whether to create a capture group for the match\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {RegExp} regular expression\n*\n* @example\n* var RE_DECIMAL_NUMBER = reDecimalNumber();\n*\n* var bool = RE_DECIMAL_NUMBER.test( 'beep 1.0 boop' );\n* // returns true\n*\n* @example\n* var RE_DECIMAL_NUMBER = reDecimalNumber({\n*     'flags': 'gm'\n* });\n* var bool = RE_DECIMAL_NUMBER.test( 'beep 1.0 boop' );\n* // returns true\n*/\nfunction reDecimalNumber( options ) {\n\tvar opts;\n\tvar err;\n\tif ( arguments.length > 0 ) {\n\t\topts = {};\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t\tif ( opts.capture ) {\n\t\t\treturn new RegExp( '('+REGEXP_STRING+')', opts.flags );\n\t\t}\n\t\treturn new RegExp( REGEXP_STRING, opts.flags );\n\t}\n\treturn /[-+]{0,1}[0-9]*\\.[0-9]+/;\n}\n\n\n// EXPORTS //\n\nmodule.exports = reDecimalNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a regular expression to match a decimal number.\n*\n* @module @stdlib/regexp-decimal-number\n*\n* @example\n* var reDecimalNumber = require( '@stdlib/regexp-decimal-number' );\n*\n* var RE_DECIMAL_NUMBER = reDecimalNumber();\n*\n* var bool = RE_DECIMAL_NUMBER.test( 'beep 1.0 boop' );\n* // returns true\n*\n* bool = RE_DECIMAL_NUMBER.test( 'beep 1 boop' );\n* // returns false\n*\n* @example\n* var reDecimalNumber = require( '@stdlib/regexp-decimal-number' );\n*\n* var RE_DECIMAL_NUMBER = reDecimalNumber({\n*     'flags': 'gm'\n* });\n* var bool = RE_DECIMAL_NUMBER.test( 'beep 1.0 boop' );\n* // returns true\n*\n* @example\n* var reDecimalNumber = require( '@stdlib/regexp-decimal-number' );\n*\n* var bool = reDecimalNumber.REGEXP.test( '2:3' );\n* // returns false\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar reDecimalNumber = require( './main.js' );\nvar REGEXP_CAPTURE = require( './regexp_capture.js' );\nvar REGEXP = require( './regexp.js' );\n\n\n// MAIN //\n\nsetReadOnly( reDecimalNumber, 'REGEXP', REGEXP );\nsetReadOnly( reDecimalNumber, 'REGEXP_CAPTURE', REGEXP_CAPTURE );\n\n\n// EXPORTS //\n\nmodule.exports = reDecimalNumber;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reDecimalNumber = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Captures a decimal number.\n*\n* Regular expression: `/([-+]{0,1}[0-9]*\\.[0-9]+)/`\n*\n* -   `()`\n*     -   capture\n*\n* -   `[-+]{0,1}`\n*     -   match a minus or plus sign zero or one time\n*\n* -   `[0-9]*`\n*     -   match the characters `[0-9]` zero or more times\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[0-9]+`\n*     -   match the characters `[0-9]` one or more times\n*\n*\n* @constant\n* @type {RegExp}\n* @default /([-+]{0,1}[0-9]*\\.[0-9]+)/\n*/\nvar REGEXP_CAPTURE = reDecimalNumber({\n\t'capture': true\n});\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP_CAPTURE;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar reDecimalNumber = require( './main.js' );\n\n\n// MAIN //\n\n/**\n* Matches a decimal number.\n*\n* Regular expression: `/[-+]{0,1}[0-9]*\\.[0-9]+/`\n*\n* -   `[-+]{0,1}`\n*     -   match a minus or plus sign zero or one time\n*\n* -   `[0-9]*`\n*     -   match the characters `[0-9]` zero or more times\n*\n* -   `\\.`\n*     -   match a `.` literal\n*\n* -   `[0-9]+`\n*     -   match the characters `[0-9]` one or more times\n*\n*\n* @constant\n* @type {RegExp}\n* @default /[-+]{0,1}[0-9]*\\.[0-9]+/\n*/\nvar REGEXP = reDecimalNumber();\n\n\n// EXPORTS //\n\nmodule.exports = REGEXP;\n"],"names":["isObject","require$$0","hasOwnProp","require$$1","isBoolean","require$$2","isPrimitive","isString","require$$3","format","require$$4","validate","opts","options","flags","TypeError","capture","REGEXP_STRING","main","err","arguments","length","RegExp","setReadOnly","reDecimalNumber","REGEXP_CAPTURE","REGEXP","lib"],"mappings":";;giBAsBA,IAAIA,EAAWC,EACXC,EAAaC,EACbC,EAAYC,EAAuCC,YACnDC,EAAWC,EAAsCF,YACjDG,EAASC,EA+Cb,ICnDIC,ED6BJ,SAAmBC,EAAMC,GACxB,OAAMb,EAAUa,GAGXX,EAAYW,EAAS,WACzBD,EAAKE,MAAQD,EAAQC,OACfP,EAAUK,EAAKE,QACb,IAAIC,UAAWN,EAAQ,8DAA+D,QAASG,EAAKE,QAGxGZ,EAAYW,EAAS,aACzBD,EAAKI,QAAUH,EAAQG,SACjBZ,EAAWQ,EAAKI,UACd,IAAID,UAAWN,EAAQ,+DAAgE,UAAWG,EAAKI,UAGzG,KAdC,IAAID,UAAWN,EAAQ,qEAAsEI,KC1BlGI,EAAgB,2BAgDpB,IAAAC,EApBA,SAA0BL,GACzB,IAAID,EACAO,EACJ,GAAKC,UAAUC,OAAS,EAAI,CAG3B,GADAF,EAAMR,EADNC,EAAO,GACeC,GAErB,MAAMM,EAEP,OAAKP,EAAKI,QACF,IAAIM,OAAQ,IAAIL,EAAc,IAAKL,EAAKE,OAEzC,IAAIQ,OAAQL,EAAeL,EAAKE,OAExC,MAAO,2BCfRS,EAAAtB,EACAuB,EAAArB,EACAsB,EClCsBxB,EA8Be,CACpCe,SAAW,IDIZU,EEnCsBzB,IFwCtBsB,EAAAC,EAAA,SAAAE,GACAH,EAAAC,EAAA,iBAAAC,GAKA,IAAAE,EAAAH"}