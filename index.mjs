// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.0-esm/index.mjs";import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import{isPrimitive as n}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.2.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";function a(t,a){return s(a)?e(a,"flags")&&(t.flags=a.flags,!n(t.flags))?new TypeError(i("invalid option. `%s` option must be a string. Option: `%s`.","flags",t.flags)):e(a,"capture")&&(t.capture=a.capture,!r(t.capture))?new TypeError(i("invalid option. `%s` option must be a boolean. Option: `%s`.","capture",t.capture)):null:new TypeError(i("invalid argument. Options argument must be an object. Value: `%s`.",a))}var o="[-+]{0,1}[0-9]*\\.[0-9]+";function p(t){var s,e;if(arguments.length>0){if(e=a(s={},t))throw e;return s.capture?new RegExp("("+o+")",s.flags):new RegExp(o,s.flags)}return/[-+]{0,1}[0-9]*\.[0-9]+/}var l=p({capture:!0}),m=p();t(p,"REGEXP",m),t(p,"REGEXP_CAPTURE",l);export{m as REGEXP,l as REGEXP_CAPTURE,p as default};
//# sourceMappingURL=index.mjs.map
